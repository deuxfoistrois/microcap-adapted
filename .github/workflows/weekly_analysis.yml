name: Weekly Portfolio Analysis
on:
  schedule:
    - cron: '0 22 * * 0'   # Sunday 22:00 UTC
  workflow_dispatch:
permissions:
  contents: write
jobs:
  weekly-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy matplotlib seaborn yfinance
          
      - name: Run weekly analysis
        run: |
          if [ -f microcap_manager.py ]; then
            python microcap_manager.py
          fi
          
      - name: Generate weekly summary
        run: |
          python -c "
          import pandas as pd
          import json
          from datetime import datetime, timedelta
          
          # Calculate weekly performance
          try:
              df = pd.read_csv('data/portfolio_history.csv')
              df['date'] = pd.to_datetime(df['date'])
              
              # Get last 7 days
              week_ago = datetime.now() - timedelta(days=7)
              weekly_data = df[df['date'] >= week_ago]
              
              if len(weekly_data) >= 2:
                  start_value = weekly_data.iloc[0]['total_value']
                  end_value = weekly_data.iloc[-1]['total_value']
                  weekly_return = ((float(end_value) - float(start_value)) / float(start_value)) * 100
                  
                  summary = {
                      'week_ending': datetime.now().strftime('%Y-%m-%d'),
                      'weekly_return': round(weekly_return, 2),
                      'start_value': float(start_value),
                      'end_value': float(end_value),
                      'trading_days': len(weekly_data)
                  }
                  
                  with open('reports/weekly_summary.json', 'w') as f:
                      json.dump(summary, f, indent=2)
                      
                  print(f'Weekly Return: {weekly_return:.2f}%')
              else:
                  print('Insufficient data for weekly analysis')
          except Exception as e:
              print(f'Weekly analysis failed: {e}')
          "
          
      - name: Commit weekly analysis
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add reports/
          git commit -m "ðŸ“… Weekly analysis - $(date -u +%Y-%m-%d)" || echo "No changes"
          git push
